name: CI/CD Frontend to S3

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-s3.yml'
  workflow_dispatch: {}

env:
  AWS_REGION: eu-north-1
  S3_BUCKET: ${{ vars.WEB_BUCKET_NAME }}
  VITE_API_BASE: ${{ vars.API_BASE_URL }}

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        env:
          VITE_API_BASE: ${{ env.VITE_API_BASE }}
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-frontend-s3

      - name: Sync static assets (immutable)
        run: |
          aws s3 sync frontend/dist s3://$S3_BUCKET \
            --delete \
            --cache-control max-age=31536000,public \
            --exclude "index.html" \
            --exclude "*.html"

      - name: Upload HTML entrypoints (no-cache)
        run: |
          # Main SPA entry
          if [ -f frontend/dist/index.html ]; then
            aws s3 cp frontend/dist/index.html s3://$S3_BUCKET/index.html \
              --cache-control no-cache,public \
              --content-type text/html;
          fi
          # Any other HTML files
          if compgen -G "frontend/dist/*.html" > /dev/null; then
            for f in frontend/dist/*.html; do
              bn=$(basename "$f")
              [ "$bn" = "index.html" ] && continue
              aws s3 cp "$f" "s3://$S3_BUCKET/$bn" \
                --cache-control no-cache,public \
                --content-type text/html;
            done
          fi

      - name: Invalidate CloudFront (optional)
        if: vars.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
